version: 2
models:
  - name: defi__fact_pending_liquidity_events
    description: "Fact table that provides the summary of the gas events for each block"
    columns:
      - name: FACT_PENDING_LIQUIDITY_EVENTS_ID
        description: "{{ doc('sk') }}"
        tests:
          - dbt_expectations.expect_column_to_exist
          - unique
      - name: BLOCK_TIMESTAMP
        description: "{{ doc('block_timestamp') }}"
        tests:
          - not_null:
              where: DIM_BLOCK_ID not in ('-1','-2')
      - name: DIM_BLOCK_ID
        description: "FK to DIM_BLOCK table"
        tests:
          - negative_one:
              where: _inserted_timestamp <  (CURRENT_TIMESTAMP - INTERVAL '8 HOURS')
      - name: POOL_NAME
        description: "{{ doc('pool_name') }}"
      - name: ASSET_TX_ID
        description: "The unique transaction id for the rune event, the liquidity type can be add/remove the rune/asset, if the event related to rune"
      - name: ASSET_BLOCKCHAIN
        description: "The blockchain of the asset"
      - name: ASSET_ADDRESS
        description: "The address of asset"
      - name: ASSET_E8
        description: "The amount of asset for the liquidity events"
      - name: RUNE_TX_ID
        description: "The unique transaction id for the rune event, the liquidity type can be add/remove the rune/asset, if the event related to rune"
      - name: RUNE_ADDRESS
        description: "The address of rune"
      - name: RUNE_E8
        description: "The amount of rune for the liquidity events"
      - name: PENDING_TYPE
        description: "The type of liquidity, can be 'add' or 'withdraw'"
    tests:
      - dbt_constraints.primary_key:
          column_name: FACT_PENDING_LIQUIDITY_EVENTS_ID
      - dbt_constraints.foreign_key:
          fk_column_name: DIM_BLOCK_ID
          pk_table_name: ref('core__dim_block')
          pk_column_name: DIM_BLOCK_ID
